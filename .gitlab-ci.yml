image: docker:19.03.13

include:
  - project: 'ghsc/hazdev/pipeline-build-template'
    ref: 'master'
    file: 'templates/library.yml'

variables:
  DOCKER_DRIVER: overlay2
  IMAGE_NAME: "$CI_PROJECT_NAME:${CI_PIPELINE_ID}"
  SERVER_REGISTRY_IMAGE_NAME: "shakecast/server"
  API_REGISTRY_IMAGE_NAME: "shakecast/api-server"
  TWINE_USERNAME: ${PYPI_USERNAME}
  TWINE_PASSWORD: ${PYPI_PASSWORD}

stages:
  - build
  - test
  - release
  - staging
  - deploy
  - publish

.python-test:
  tags:
    - shakecast-dev
  only:
    - merge_requests
  before_script:
    - cd ${CI_PROJECT_DIR}
    - ./scripts/test_env.sh

.shakecast-dev:
  tags:
    - shakecast-dev

.release:
  before_script:
    - echo ${CI_COMMIT_REF_NAME} > shakecast/version

.build:
  tags:
    - build
  except:
    - schedules

# BUILD STEPS
build-test-images:
  stage: build
  extends: 
    - .shakecast-dev
    - .dind
    - .build
  only:
    - merge_requests
  script:
    - docker build . -t $CODE_REGISTRY_IMAGE/shakecast:test
    - docker push $CODE_REGISTRY_IMAGE/shakecast:test
  after_script:
    - docker rmi $CODE_REGISTRY_IMAGE/shakecast:test


# TESTING THE PYTHON APP
app-test:
  stage: test
  image: $CODE_REGISTRY_IMAGE/shakecast:test
  extends: 
    - .shakecast-dev
    - .python-test
  script:
    - python3 -m shakecast.tests.bundle

api-test:
  stage: test
  image: $CODE_REGISTRY_IMAGE/shakecast:test
  extends: 
    - .shakecast-dev
    - .python-test
  script:
    - python3 -m shakecast.api &
    - sleep 5
    - curl localhost:5000

# RELEASE CONTAINERS
release-dev:
  stage: release
  extends:
    - .dind
    - .release
    - .build
  only:
    - master
  script:
    - docker build . -t $CODE_REGISTRY_IMAGE/shakecast:dev
    - docker push $CODE_REGISTRY_IMAGE/shakecast:dev
  after_script:
    - docker rmi $CODE_REGISTRY_IMAGE/shakecast:dev

release-prod:
  stage: release
  extends:
    - .dind
    - .release
    - .build
  only:
    - tags
  script:
    - docker build . -t $CODE_REGISTRY_IMAGE/shakecast:latest
    - docker push $CODE_REGISTRY_IMAGE/shakecast:latest
  after_script:
    - docker rmi $CODE_REGISTRY_IMAGE/shakecast:latest

# STAGING
test-staging:
  stage: staging
  only:
    - master
  when: manual
  extends: 
    - .shakecast-dev
    - .dind
  before_script:
    - docker rm -f shakecast-test || true
    - docker rmi $CODE_REGISTRY_IMAGE/shakecast:dev || true
  script:
    - docker run -d --name=shakecast-test --network=app-network --entrypoint=python $CODE_REGISTRY_IMAGE/shakecast:dev -m shakecast start

prod-staging:
  stage: staging
  only:
    - tags
  when: manual
  extends: 
    - .shakecast-dev
    - .dind
  before_script:
    - docker rm -f shakecast-prod || true
    - docker rmi $CODE_REGISTRY_IMAGE/shakecast:latest || true
  script:
    - docker run -d --name=shakecast-prod --network=app-network --entrypoint=python $CODE_REGISTRY_IMAGE/shakecast:latest -m shakecast start

# PUBLISH PACKAGES/CONTAINERS
publish-python:
  stage: publish
  image: $CODE_REGISTRY_IMAGE/shakecast:test
  extends: .release
  only:
    - tags
  when: manual
  script:
    - python3 -m pip install --upgrade pip
    - pip install setuptools wheel twine
    - python setup.py bdist_wheel
    - twine upload dist/*
